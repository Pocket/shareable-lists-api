type ShareableListComplete implements ShareableListInterface {
    """
    A unique string identifier in UUID format.
    """
    externalId: ID!
    """
    Pocket User ID.
    UserId is of Float type as GraphQL does not support BigInt.
    This will ensure that all large integer values are handled
    and will be interpreted as Number type.
    """
    userId: Float!
    """
    A URL-ready identifier of the list. Generated from the title
    of the list when it's first made public. Unique per user.
    """
    slug: String
    """
    The title of the list. Provided by the Pocket user.
    """
    title: String!
    """
    Optional text description of a Shareable List. Provided by the Pocket user.
    """
    description: String
    """
    The status of the list. Defaults to PRIVATE.
    """
    status: ShareableListStatus!
    """
    The moderation status of the list. Defaults to VISIBLE.
    """
    moderationStatus: ShareableListModerationStatus!
    """
    The timestamp of when the list was created by its owner.
    """
    createdAt: ISOString!
    """
    The timestamp of when the list was last updated by its owner
    or a member of the moderation team.
    """
    updatedAt: ISOString!
    """
    Pocket Saves that have been added to this list by the Pocket user.
    """
    listItems: [ShareableListItem!]!
    """
    The LDAP username of the moderator who took down a list
    that violates the Pocket content moderation policy.
    """
    moderatedBy: String
    """
    The reason why the moderator took down the list.
    """
    moderationReason: String
}

type Query {
  """
  Looks up and returns a Shareable List with a given external ID for any user.
  """
  searchShareableList(externalId: ID!): ShareableListComplete
}

"""
Input data for removing (moderating) a ShareableList
"""
input ModerateShareableListInput {
  externalId: ID!
  moderationStatus: ShareableListModerationStatus!
  moderationReason: String!
}

type Mutation {
	"""
	Removes (moderates) a Shareable List.
	"""
	moderateShareableList(data: ModerateShareableListInput!): ShareableListComplete
}
