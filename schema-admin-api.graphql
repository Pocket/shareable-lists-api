extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.3", import: ["@key", "@composeDirective"])
  @link(url: "https://myspecs.dev/myDirective/v1.0", import: ["@constraint"])
  @composeDirective(name: "@constraint")

directive @constraint(minLength: Int, maxLength: Int, startsWith: String, endsWith: String, contains: String, notContains: String, pattern: String, format: String, min: Float, max: Float, exclusiveMin: Float, exclusiveMax: Float, multipleOf: Float, minItems: Int, maxItems: Int, uniqueTypeName: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION | ARGUMENT_DEFINITION

directive @cacheControl(
  """
  The maximum amount of time the field's cached value is valid, in seconds.
  """
  maxAge: Int

  """
  If PRIVATE, the field's value is specific to a single user. The default value is PUBLIC
  """
  scope: CacheControlScope

  """
  If true, this field inherits the maxAge of its parent field instead of using the default
  maxAge. Do not provide maxAge if you provide this argument.
  """
  inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION

enum ShareableListModerationReason {
  ABUSIVE_BEHAVIOR
  POSTING_PRIVATE_INFORMATION
  HATE_SPEECH
  MISLEADING_INFORMATION
  ADULT_SEXUAL_CONTENT
  CSAM_IMAGES
  CSAM_SOLICITATION
  ILLEGAL_GOODS_AND_SERVICES
  VIOLENCE_AND_GORE
  INSTRUCTIONS_FOR_VIOLENCE
  INCITEMENT_TO_VIOLENCE
  SELF_HARM
  TERRORISM
  COPYRIGHT
  TRADEMARK
  COUNTERFEIT
  SPAM
  FRAUD
  MALWARE
  PHISHING
}

type ShareableListComplete implements ShareableListInterface {
  """A unique string identifier in UUID format."""
  externalId: ID!

  """The user who created this shareable list."""
  user: User!

  """
  A URL-ready identifier of the list. Generated from the title
  of the list when it's first made public. Unique per user.
  """
  slug: String

  """The title of the list. Provided by the Pocket user."""
  title: String!

  """
  Optional text description of a Shareable List. Provided by the Pocket user.
  """
  description: String

  """The status of the list. Defaults to PRIVATE."""
  status: ShareableListStatus!

  """The moderation status of the list. Defaults to VISIBLE."""
  moderationStatus: ShareableListModerationStatus!

  """The timestamp of when the list was created by its owner."""
  createdAt: ISOString!

  """
  The timestamp of when the list was last updated by its owner
  or a member of the moderation team.
  """
  updatedAt: ISOString!

  """Pocket Saves that have been added to this list by the Pocket user."""
  listItems: [ShareableListItem!]!

  """
  The LDAP username of the moderator who took down a list
  that violates the Pocket content moderation policy.
  """
  moderatedBy: String

  """The reason why the moderator took down the list."""
  moderationReason: ShareableListModerationReason

  """The optional details why the list was moderated."""
  moderationDetails: String
}

type Query {
  """
  Looks up and returns a Shareable List with a given external ID for any user.
  """
  searchShareableList(externalId: ID!): ShareableListComplete
}

"""Input data for removing (moderating) a ShareableList"""
input ModerateShareableListInput {
  externalId: ID!
  moderationStatus: ShareableListModerationStatus!
  moderationReason: ShareableListModerationReason!
  moderationDetails: String
}

type Mutation {
  """Removes (moderates) a Shareable List."""
  moderateShareableList(data: ModerateShareableListInput!): ShareableListComplete
}

"""ISOString custom scalar type"""
scalar ISOString

"""A URL to a web page or image."""
scalar Url

"""
The status of a Shareable List. Defaults to PRIVATE - visible only to its owner.
"""
enum ShareableListStatus {
  """
  The list is only visible to its owner - the Pocket user who created it.
  """
  PRIVATE

  """The list has been shared and can be viewed by anyone in the world."""
  PUBLIC
}

"""The moderation status of a Shareable List. Defaults to VISIBLE."""
enum ShareableListModerationStatus {
  """
  The list and its contents abide by the Pocket content moderation policy.
  """
  VISIBLE

  """
  The list and its contents have been removed from view and further editing
  by its owner as it violated the Pocket content moderation policy.
  """
  HIDDEN
}

"""
Resolve by reference the User entity in this graph to provide user data with public lists.
"""
type User
  @key(fields: "id", resolvable: false)
{
  id: ID!
}

"""A Pocket Save (story) that has been added to a Shareable List."""
type ShareableListItem {
  """A unique string identifier in UUID format."""
  externalId: ID!

  """The Parser Item ID."""
  itemId: ID!

  """The URL of the story saved to a list."""
  url: Url!

  """
  The title of the story. Supplied by the Parser.
  May not be available for URLs that cannot be resolved.
  Not editable by the Pocket user, as are all the other
  Parser-supplied story properties below.
  """
  title: String

  """The excerpt of the story. Supplied by the Parser."""
  excerpt: String

  """
  The URL of the thumbnail image illustrating the story. Supplied by the Parser.
  """
  imageUrl: Url

  """The name of the publisher for this story. Supplied by the Parser."""
  publisher: String

  """A comma-separated list of story authors. Supplied by the Parser."""
  authors: String

  """The custom sort order of stories within a list. Defaults to 1."""
  sortOrder: Int!

  """The timestamp of when this story was added to the list by its owner."""
  createdAt: ISOString!

  """
  The timestamp of when the story was last updated. Not used for the MVP.
  """
  updatedAt: ISOString!
}

interface ShareableListInterface {
  """A unique string identifier in UUID format."""
  externalId: ID!

  """The user who created this shareable list."""
  user: User!

  """
  A URL-ready identifier of the list. Generated from the title
  of the list when it's first made public. Unique per user.
  """
  slug: String

  """The title of the list. Provided by the Pocket user."""
  title: String!

  """
  Optional text description of a Shareable List. Provided by the Pocket user.
  """
  description: String

  """The status of the list. Defaults to PRIVATE."""
  status: ShareableListStatus!

  """The moderation status of the list. Defaults to VISIBLE."""
  moderationStatus: ShareableListModerationStatus!

  """The timestamp of when the list was created by its owner."""
  createdAt: ISOString!

  """
  The timestamp of when the list was last updated by its owner
  or a member of the moderation team.
  """
  updatedAt: ISOString!

  """Pocket Saves that have been added to this list by the Pocket user."""
  listItems: [ShareableListItem!]!
}

"""
Apollo Server @cacheControl directive caching behavior either for a single field, or for all fields that
return a particular type
"""
enum CacheControlScope {
  PUBLIC
  PRIVATE
}